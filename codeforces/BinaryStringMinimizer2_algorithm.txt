k = 5
11011010 -- n
01234567 -- indices

zeros	    index	k
[2,5,7]	    0		5
[0,5,7]	    1		5-2=3
[0,2,7]	    2		-1

zeros = [0,2,7]
partialOnes = fillWith(1, zeros)
nSize = len n
partialSize = len partialOnes
remaining = nSize - partialSize
answer = partialOnes ++ (take remaining $ repeat 1)

1101101011
0123456789

00000000

process
requiredMoves = 2 - index = 2
updatedMoves = moves - requiredMoves = 5 - 2
if -> index = 0

requiredMoves = 5 - index = 4
updatedMoves = moves - requiredMoves = 3 - 4 = -1
if -> index - updatedMoves = 1 - (-1) = 2

if updatedMoves > 0 -> index
else index - updatedMoves -> -- negative number

---------------------

zeroIndex = 0
index = 2
desiredMoves = index - zeroIndex
calculateMoves moves desiredMoves  =
    desiredMoves if moves - desiredMoves >= 0 else moves
allowedMoves = calculateMoves(moves, desiredMoves)
move(index, allowedMoves)


size = 8
moves = 5
string = 11011010
       	 01234567

lastZeroindex = 0
remainingmoves = 5

index = 2
desiredmoves = 2 - 0 = 2
allowedmoves = 2
target_index = 2 - 2 = 0
swap(2, 0, 11011010) = 01111010
remainingmoves = 5 - 2 = 3
lastzeroindex = 1

01111011
01234567

index = 5
desiredmoves = 5 - 1 = 4
allowedmoves(3, 4) = 3
target_index = 5 - 3 = 2
swap(5, 2, 01111010) = 01011110
remainingmoves = 3 - 3 = 0
lastzeroindex = 2

----------------------

size = 7
moves = 11
string = 1111100
       	 0123456

lastZeroindex = 0
remainingmoves = 11

index = 5
desiredmoves = 5 - 0 = 5
allowedmoves = 5
target_index = 5 - 5 = 0
swap(5, 0, 1111100) = 0111110
remainingmoves = 11 - 5 = 6
lastzeroindex = 1

index = 6
desiredmoves = 6 - 1 = 5
allowedmoves(6, 5) = 5
target_index = 6 - 5 = 1
swap(6, 1, 0111110) = 0011111
remainingmoves = 6 - 5 = 1
nextzeroindex = 2

-----

010000100111
001000100111
000100100111
000010100111
000001100111
000000110111
000000011111

0000000110
0123456789

-----

Failing case:

size = 10
moves = 12
string = 0110111000
       	 0123456789

rm = 12
nzi = 1

i = 3
dm = 3 - 1 = 2
am(12, 2) = 2
move(3, 2, 0110111000) = 0011111000
ti = 3 - 2 = 1	       	 0123456789
rm = 12 - 2 = 10
nzi = 2

i = 7
dm = 7 - 2 = 5
am(10, 5) = 5
move(7, 5, 0011111000) = 0001111100
ti = 7 - 5 = 2	       	 0123456789
rm = 10 - 5 = 5
nzi = 3

i = 8
dm = 8 - 3 = 5
am(5, 5) = 5
move(8, 5, 0011111000) = 0000111110
ti = 8 - 5 = 3	       	 0123456789
rm = 5 - 5 = 0
nzi = 4

It fails because the one at index = 1 is skipped
A swap is not the correct operation to do.

0110111000
0011111000
